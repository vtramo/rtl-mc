// Generated from /home/vincenzo/project/rtl-mc/src/parser/antlr4/g4/LinearExpression.g4 by ANTLR 4.13.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class LinearExpressionLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		LINE_COMMENT=1, COMMENT=2, WS=3, UNSIGNED_INT=4, NEWLINE=5, TIMES=6, PLUS=7, 
		MINUS=8, LE=9, LT=10, GT=11, GE=12, EQ=13, FLOW=14, INV=15, ID=16, ANY_ID=17;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"DIGIT", "LETTER", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", 
			"K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", 
			"Y", "Z", "LINE_COMMENT", "COMMENT", "WS", "UNSIGNED_INT", "NEWLINE", 
			"TIMES", "PLUS", "MINUS", "LE", "LT", "GT", "GE", "EQ", "FLOW", "INV", 
			"ID", "ANY_ID"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, "'*'", "'+'", "'-'", "'<='", "'<'", 
			"'>'", "'>='", "'='"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "LINE_COMMENT", "COMMENT", "WS", "UNSIGNED_INT", "NEWLINE", "TIMES", 
			"PLUS", "MINUS", "LE", "LT", "GT", "GE", "EQ", "FLOW", "INV", "ID", "ANY_ID"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public LinearExpressionLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LinearExpression.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0011\u00e8\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0002\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!"+
		"\u0007!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002"+
		"&\u0007&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002"+
		"+\u0007+\u0002,\u0007,\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001"+
		"\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001"+
		"\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001"+
		"\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001"+
		"\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0005\u001c\u0098"+
		"\b\u001c\n\u001c\f\u001c\u009b\t\u001c\u0001\u001c\u0001\u001c\u0001\u001c"+
		"\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0005\u001d"+
		"\u00a5\b\u001d\n\u001d\f\u001d\u00a8\t\u001d\u0001\u001d\u0001\u001d\u0001"+
		"\u001d\u0001\u001d\u0001\u001d\u0001\u001e\u0004\u001e\u00b0\b\u001e\u000b"+
		"\u001e\f\u001e\u00b1\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001"+
		"\u001f\u0005\u001f\u00b9\b\u001f\n\u001f\f\u001f\u00bc\t\u001f\u0003\u001f"+
		"\u00be\b\u001f\u0001 \u0003 \u00c1\b \u0001 \u0001 \u0001!\u0001!\u0001"+
		"\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001$\u0001%\u0001%\u0001&\u0001"+
		"&\u0001\'\u0001\'\u0001\'\u0001(\u0001(\u0001)\u0001)\u0001)\u0001)\u0001"+
		")\u0001*\u0001*\u0001*\u0001*\u0001+\u0001+\u0003+\u00e2\b+\u0001,\u0001"+
		",\u0001,\u0003,\u00e7\b,\u0002\u0099\u00a6\u0000-\u0001\u0000\u0003\u0000"+
		"\u0005\u0000\u0007\u0000\t\u0000\u000b\u0000\r\u0000\u000f\u0000\u0011"+
		"\u0000\u0013\u0000\u0015\u0000\u0017\u0000\u0019\u0000\u001b\u0000\u001d"+
		"\u0000\u001f\u0000!\u0000#\u0000%\u0000\'\u0000)\u0000+\u0000-\u0000/"+
		"\u00001\u00003\u00005\u00007\u00009\u0001;\u0002=\u0003?\u0004A\u0005"+
		"C\u0006E\u0007G\bI\tK\nM\u000bO\fQ\rS\u000eU\u000fW\u0010Y\u0011\u0001"+
		"\u0000\u001e\u0001\u000009\u0002\u0000AZaz\u0002\u0000AAaa\u0002\u0000"+
		"BBbb\u0002\u0000CCcc\u0002\u0000DDdd\u0002\u0000EEee\u0002\u0000FFff\u0002"+
		"\u0000GGgg\u0002\u0000HHhh\u0002\u0000IIii\u0002\u0000JJjj\u0002\u0000"+
		"KKkk\u0002\u0000LLll\u0002\u0000MMmm\u0002\u0000NNnn\u0002\u0000OOoo\u0002"+
		"\u0000PPpp\u0002\u0000QQqq\u0002\u0000RRrr\u0002\u0000SSss\u0002\u0000"+
		"TTtt\u0002\u0000UUuu\u0002\u0000VVvv\u0002\u0000WWww\u0002\u0000XXxx\u0002"+
		"\u0000YYyy\u0002\u0000ZZzz\u0003\u0000\t\n\r\r  \u0001\u000019\u00d4\u0000"+
		"9\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001"+
		"\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000"+
		"\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000"+
		"G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0000K\u0001"+
		"\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000"+
		"\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000"+
		"U\u0001\u0000\u0000\u0000\u0000W\u0001\u0000\u0000\u0000\u0000Y\u0001"+
		"\u0000\u0000\u0000\u0001[\u0001\u0000\u0000\u0000\u0003]\u0001\u0000\u0000"+
		"\u0000\u0005_\u0001\u0000\u0000\u0000\u0007a\u0001\u0000\u0000\u0000\t"+
		"c\u0001\u0000\u0000\u0000\u000be\u0001\u0000\u0000\u0000\rg\u0001\u0000"+
		"\u0000\u0000\u000fi\u0001\u0000\u0000\u0000\u0011k\u0001\u0000\u0000\u0000"+
		"\u0013m\u0001\u0000\u0000\u0000\u0015o\u0001\u0000\u0000\u0000\u0017q"+
		"\u0001\u0000\u0000\u0000\u0019s\u0001\u0000\u0000\u0000\u001bu\u0001\u0000"+
		"\u0000\u0000\u001dw\u0001\u0000\u0000\u0000\u001fy\u0001\u0000\u0000\u0000"+
		"!{\u0001\u0000\u0000\u0000#}\u0001\u0000\u0000\u0000%\u007f\u0001\u0000"+
		"\u0000\u0000\'\u0081\u0001\u0000\u0000\u0000)\u0083\u0001\u0000\u0000"+
		"\u0000+\u0085\u0001\u0000\u0000\u0000-\u0087\u0001\u0000\u0000\u0000/"+
		"\u0089\u0001\u0000\u0000\u00001\u008b\u0001\u0000\u0000\u00003\u008d\u0001"+
		"\u0000\u0000\u00005\u008f\u0001\u0000\u0000\u00007\u0091\u0001\u0000\u0000"+
		"\u00009\u0093\u0001\u0000\u0000\u0000;\u00a0\u0001\u0000\u0000\u0000="+
		"\u00af\u0001\u0000\u0000\u0000?\u00bd\u0001\u0000\u0000\u0000A\u00c0\u0001"+
		"\u0000\u0000\u0000C\u00c4\u0001\u0000\u0000\u0000E\u00c6\u0001\u0000\u0000"+
		"\u0000G\u00c8\u0001\u0000\u0000\u0000I\u00ca\u0001\u0000\u0000\u0000K"+
		"\u00cd\u0001\u0000\u0000\u0000M\u00cf\u0001\u0000\u0000\u0000O\u00d1\u0001"+
		"\u0000\u0000\u0000Q\u00d4\u0001\u0000\u0000\u0000S\u00d6\u0001\u0000\u0000"+
		"\u0000U\u00db\u0001\u0000\u0000\u0000W\u00df\u0001\u0000\u0000\u0000Y"+
		"\u00e6\u0001\u0000\u0000\u0000[\\\u0007\u0000\u0000\u0000\\\u0002\u0001"+
		"\u0000\u0000\u0000]^\u0007\u0001\u0000\u0000^\u0004\u0001\u0000\u0000"+
		"\u0000_`\u0007\u0002\u0000\u0000`\u0006\u0001\u0000\u0000\u0000ab\u0007"+
		"\u0003\u0000\u0000b\b\u0001\u0000\u0000\u0000cd\u0007\u0004\u0000\u0000"+
		"d\n\u0001\u0000\u0000\u0000ef\u0007\u0005\u0000\u0000f\f\u0001\u0000\u0000"+
		"\u0000gh\u0007\u0006\u0000\u0000h\u000e\u0001\u0000\u0000\u0000ij\u0007"+
		"\u0007\u0000\u0000j\u0010\u0001\u0000\u0000\u0000kl\u0007\b\u0000\u0000"+
		"l\u0012\u0001\u0000\u0000\u0000mn\u0007\t\u0000\u0000n\u0014\u0001\u0000"+
		"\u0000\u0000op\u0007\n\u0000\u0000p\u0016\u0001\u0000\u0000\u0000qr\u0007"+
		"\u000b\u0000\u0000r\u0018\u0001\u0000\u0000\u0000st\u0007\f\u0000\u0000"+
		"t\u001a\u0001\u0000\u0000\u0000uv\u0007\r\u0000\u0000v\u001c\u0001\u0000"+
		"\u0000\u0000wx\u0007\u000e\u0000\u0000x\u001e\u0001\u0000\u0000\u0000"+
		"yz\u0007\u000f\u0000\u0000z \u0001\u0000\u0000\u0000{|\u0007\u0010\u0000"+
		"\u0000|\"\u0001\u0000\u0000\u0000}~\u0007\u0011\u0000\u0000~$\u0001\u0000"+
		"\u0000\u0000\u007f\u0080\u0007\u0012\u0000\u0000\u0080&\u0001\u0000\u0000"+
		"\u0000\u0081\u0082\u0007\u0013\u0000\u0000\u0082(\u0001\u0000\u0000\u0000"+
		"\u0083\u0084\u0007\u0014\u0000\u0000\u0084*\u0001\u0000\u0000\u0000\u0085"+
		"\u0086\u0007\u0015\u0000\u0000\u0086,\u0001\u0000\u0000\u0000\u0087\u0088"+
		"\u0007\u0016\u0000\u0000\u0088.\u0001\u0000\u0000\u0000\u0089\u008a\u0007"+
		"\u0017\u0000\u0000\u008a0\u0001\u0000\u0000\u0000\u008b\u008c\u0007\u0018"+
		"\u0000\u0000\u008c2\u0001\u0000\u0000\u0000\u008d\u008e\u0007\u0019\u0000"+
		"\u0000\u008e4\u0001\u0000\u0000\u0000\u008f\u0090\u0007\u001a\u0000\u0000"+
		"\u00906\u0001\u0000\u0000\u0000\u0091\u0092\u0007\u001b\u0000\u0000\u0092"+
		"8\u0001\u0000\u0000\u0000\u0093\u0094\u0005/\u0000\u0000\u0094\u0095\u0005"+
		"/\u0000\u0000\u0095\u0099\u0001\u0000\u0000\u0000\u0096\u0098\t\u0000"+
		"\u0000\u0000\u0097\u0096\u0001\u0000\u0000\u0000\u0098\u009b\u0001\u0000"+
		"\u0000\u0000\u0099\u009a\u0001\u0000\u0000\u0000\u0099\u0097\u0001\u0000"+
		"\u0000\u0000\u009a\u009c\u0001\u0000\u0000\u0000\u009b\u0099\u0001\u0000"+
		"\u0000\u0000\u009c\u009d\u0003A \u0000\u009d\u009e\u0001\u0000\u0000\u0000"+
		"\u009e\u009f\u0006\u001c\u0000\u0000\u009f:\u0001\u0000\u0000\u0000\u00a0"+
		"\u00a1\u0005/\u0000\u0000\u00a1\u00a2\u0005*\u0000\u0000\u00a2\u00a6\u0001"+
		"\u0000\u0000\u0000\u00a3\u00a5\t\u0000\u0000\u0000\u00a4\u00a3\u0001\u0000"+
		"\u0000\u0000\u00a5\u00a8\u0001\u0000\u0000\u0000\u00a6\u00a7\u0001\u0000"+
		"\u0000\u0000\u00a6\u00a4\u0001\u0000\u0000\u0000\u00a7\u00a9\u0001\u0000"+
		"\u0000\u0000\u00a8\u00a6\u0001\u0000\u0000\u0000\u00a9\u00aa\u0005*\u0000"+
		"\u0000\u00aa\u00ab\u0005/\u0000\u0000\u00ab\u00ac\u0001\u0000\u0000\u0000"+
		"\u00ac\u00ad\u0006\u001d\u0000\u0000\u00ad<\u0001\u0000\u0000\u0000\u00ae"+
		"\u00b0\u0007\u001c\u0000\u0000\u00af\u00ae\u0001\u0000\u0000\u0000\u00b0"+
		"\u00b1\u0001\u0000\u0000\u0000\u00b1\u00af\u0001\u0000\u0000\u0000\u00b1"+
		"\u00b2\u0001\u0000\u0000\u0000\u00b2\u00b3\u0001\u0000\u0000\u0000\u00b3"+
		"\u00b4\u0006\u001e\u0000\u0000\u00b4>\u0001\u0000\u0000\u0000\u00b5\u00be"+
		"\u0003\u0001\u0000\u0000\u00b6\u00ba\u0007\u001d\u0000\u0000\u00b7\u00b9"+
		"\u0003\u0001\u0000\u0000\u00b8\u00b7\u0001\u0000\u0000\u0000\u00b9\u00bc"+
		"\u0001\u0000\u0000\u0000\u00ba\u00b8\u0001\u0000\u0000\u0000\u00ba\u00bb"+
		"\u0001\u0000\u0000\u0000\u00bb\u00be\u0001\u0000\u0000\u0000\u00bc\u00ba"+
		"\u0001\u0000\u0000\u0000\u00bd\u00b5\u0001\u0000\u0000\u0000\u00bd\u00b6"+
		"\u0001\u0000\u0000\u0000\u00be@\u0001\u0000\u0000\u0000\u00bf\u00c1\u0005"+
		"\r\u0000\u0000\u00c0\u00bf\u0001\u0000\u0000\u0000\u00c0\u00c1\u0001\u0000"+
		"\u0000\u0000\u00c1\u00c2\u0001\u0000\u0000\u0000\u00c2\u00c3\u0005\n\u0000"+
		"\u0000\u00c3B\u0001\u0000\u0000\u0000\u00c4\u00c5\u0005*\u0000\u0000\u00c5"+
		"D\u0001\u0000\u0000\u0000\u00c6\u00c7\u0005+\u0000\u0000\u00c7F\u0001"+
		"\u0000\u0000\u0000\u00c8\u00c9\u0005-\u0000\u0000\u00c9H\u0001\u0000\u0000"+
		"\u0000\u00ca\u00cb\u0005<\u0000\u0000\u00cb\u00cc\u0005=\u0000\u0000\u00cc"+
		"J\u0001\u0000\u0000\u0000\u00cd\u00ce\u0005<\u0000\u0000\u00ceL\u0001"+
		"\u0000\u0000\u0000\u00cf\u00d0\u0005>\u0000\u0000\u00d0N\u0001\u0000\u0000"+
		"\u0000\u00d1\u00d2\u0005>\u0000\u0000\u00d2\u00d3\u0005=\u0000\u0000\u00d3"+
		"P\u0001\u0000\u0000\u0000\u00d4\u00d5\u0005=\u0000\u0000\u00d5R\u0001"+
		"\u0000\u0000\u0000\u00d6\u00d7\u0003\u000f\u0007\u0000\u00d7\u00d8\u0003"+
		"\u001b\r\u0000\u00d8\u00d9\u0003!\u0010\u0000\u00d9\u00da\u00031\u0018"+
		"\u0000\u00daT\u0001\u0000\u0000\u0000\u00db\u00dc\u0003\u0015\n\u0000"+
		"\u00dc\u00dd\u0003\u001f\u000f\u0000\u00dd\u00de\u0003/\u0017\u0000\u00de"+
		"V\u0001\u0000\u0000\u0000\u00df\u00e1\u0003\u0003\u0001\u0000\u00e0\u00e2"+
		"\u0003\u0001\u0000\u0000\u00e1\u00e0\u0001\u0000\u0000\u0000\u00e1\u00e2"+
		"\u0001\u0000\u0000\u0000\u00e2X\u0001\u0000\u0000\u0000\u00e3\u00e7\u0003"+
		"W+\u0000\u00e4\u00e7\u0003S)\u0000\u00e5\u00e7\u0003U*\u0000\u00e6\u00e3"+
		"\u0001\u0000\u0000\u0000\u00e6\u00e4\u0001\u0000\u0000\u0000\u00e6\u00e5"+
		"\u0001\u0000\u0000\u0000\u00e7Z\u0001\u0000\u0000\u0000\t\u0000\u0099"+
		"\u00a6\u00b1\u00ba\u00bd\u00c0\u00e1\u00e6\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}