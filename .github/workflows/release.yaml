name: Release

on:
  workflow_run:
    workflows:
      - "Compile -> Test -> Build Docker Image -> Push Docker Image"
    branches:
      - main
    types:
      - completed

jobs:
  tag-and-push-release-docker-image:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Tag and Push release Docker image
    runs-on: ubuntu-24.04
    steps:
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.ref_name }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "is_release_tag=true" >> $GITHUB_OUTPUT
          fi

      - name: Add SHORT_SHA Environment Variable
        if: steps.check-tag.outputs.is_release_tag == 'true'
        id: short-sha
        shell: bash
        run: echo "COMMIT_SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Login to Docker Hub
        if: steps.check-tag.outputs.is_release_tag == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull release Docker image
        if: steps.check-tag.outputs.is_release_tag == 'true'
        run: |
          docker pull vtramo/rtl-mc:${{ env.COMMIT_SHORT_SHA }}

      - name: Tag release Docker image
        if: steps.check-tag.outputs.is_release_tag == 'true'
        run: |
          docker tag vtramo/rtl-mc:${{ env.COMMIT_SHORT_SHA }} vtramo/rtl-mc:${{ github.ref_name }}

      - name: Push release Docker image
        if: steps.check-tag.outputs.is_release_tag == 'true'
        run: |
          docker push vtramo/rtl-mc:${{ github.ref_name }}

  github-release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Release
    runs-on: ubuntu-24.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.ref_name }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "is_release_tag=true" >> $GITHUB_OUTPUT
          fi

      - name: Update CHANGELOG
        if: steps.check-tag.outputs.is_release_tag == 'true'
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}

      - name: Create GitHub release
        if: steps.check-tag.outputs.is_release_tag == 'true'
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Release v${{ github.ref }}
          tag_name: ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changes }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Commit CHANGELOG.md
        if: steps.check-tag.outputs.is_release_tag == 'true'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: 'docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]'
          file_pattern: CHANGELOG.md

  meson-dist:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Release
    runs-on: ubuntu-24.04
    needs: github-release
    container:
      image: vtramo/rtl-mc:build-${{ github.sha }}
    steps:
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.ref_name }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "is_release_tag=true" >> $GITHUB_OUTPUT
          fi

      - name: Meson setup
        if: steps.check-tag.outputs.is_release_tag == 'true'
        run: |
          meson setup  \
            --optimization 3  \
            --errorlogs  \
            --buildtype release  \
            -Denable_tests=false  \
            -Ddebug=false  \
            -Dgenerate_parser=true  \
            -Denable_profiling=false  \
            buildDir

      - name: Meson dist
        if: steps.check-tag.outputs.is_release_tag == 'true'
        id: meson-dist
        run: |
          meson dist -C buildDir
          PACK_NAME=$(find ./buildDir/meson-dist -maxdepth 1 -type f -name "*.tar.xz")
          echo "::set-output name=tar_filename::$PACK_NAME"

      - name: Upload artifacts
        if: steps.check-tag.outputs.is_release_tag == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.github-release.outputs.upload_url }}
          asset_path: ./buildDir/meson-dist/${{ steps.meson-dist.outputs.tar_filename }}
          asset_name: ${{ steps.meson-dist.outputs.tar_filename }}
          asset_content_type: application/gzip
